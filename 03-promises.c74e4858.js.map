{"mappings":"iiBAAA,IAEWA,EAFXC,EAAAC,EAAA,UAEWF,EACK,QADAG,SAASC,cAAcJ,IAwClCK,iBAAiB,UArCD,SAAAC,GACnBA,EAAMC,iBAsBN,IArBA,IAEqBC,EAAnBF,EAAMG,cADNC,SAAYC,EAAKH,EAALG,MAAOC,EAAIJ,EAAJI,KAAMC,EAAML,EAANK,OAGvBC,EAAaH,EAAMI,cACnBC,EAAYJ,EAAKG,cACjBE,EAAcJ,EAAOE,cAEnBG,EAAgB,SAACC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,WACLH,EACFF,EAAQM,EAAA3B,GAAS4B,OAAOC,QAAQ,uBAAwCC,OAAfZ,EAAS,QAAiBY,OAAXX,EAAW,QAEjFG,EAAKK,EAAA3B,GAAS4B,OAAOG,QAAQ,sBAAqCD,OAAfZ,EAAS,QAAiBY,OAAXX,EAAW,O,GAEhFA,E,KAIEa,EAAI,EAAGA,GAAKhB,EAAagB,GAAK,EAAG,CACxC,IAAIC,EAAWD,EAEff,EAAcgB,EAAUpB,GACrBqB,MAAK,SAAAC,GAAUC,QAAQC,IAAIF,E,IAE3BG,OAAM,SAAAC,GAAUH,QAAQC,IAAIE,E,IAG/B1B,GAA0BE,EAC1BkB,G","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst qs = s => document.querySelector(s);\nconst form = qs(\".form\")\n\nconst handleSubmit = event => {\n  event.preventDefault();\n  const { \n    elements: { delay, step, amount } \n} = event.currentTarget;\n\n  let delayValue = delay.valueAsNumber;\n  let stepValue = step.valueAsNumber;\n  let amountValue = amount.valueAsNumber;\n\n  const createPromise = (position, delayValue) => {\n    return new Promise((resolve, reject) => {\n      const shouldResolve = Math.random() > 0.3;\n      setTimeout(() => {\n        if (shouldResolve) {\n          resolve(Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delayValue}ms`));\n        } else {\n          reject(Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delayValue}ms`));\n        }\n      }, delayValue);\n    });\n  }\n\n  for (let i = 1; i <= amountValue; i += 1) {\n    let position = i;\n\n    createPromise(position, delayValue)\n      .then(value => {console.log(value);\n      })\n      .catch(error => {console.log(error);\n      });\n      \n    delayValue = delayValue + stepValue;\n    position++;\n  }\n};\n\nform.addEventListener(\"submit\", handleSubmit);\n"],"names":["s","$6JpON","parcelRequire","document","querySelector","addEventListener","event","preventDefault","_elements","currentTarget","elements","delay","step","amount","delayValue1","valueAsNumber","stepValue","amountValue","createPromise","position","delayValue","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","$parcel$interopDefault","Notify","success","concat","failure","i","position1","then","value","console","log","catch","error"],"version":3,"file":"03-promises.c74e4858.js.map"}